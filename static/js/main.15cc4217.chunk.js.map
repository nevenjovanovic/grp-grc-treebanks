{"version":3,"sources":["lib/types.js","components/Header/Header.js","components/Header/index.js","components/Hero/index.js","components/Hero/Hero.js","components/Markdown/Markdown.js","components/Markdown/index.js","components/Collection/Collection.js","components/Collection/index.js","components/Home/index.js","components/Home/Home.js","components/ArethusaWrapper/ArethusaConfig.js","components/ArethusaWrapper/index.js","components/ArethusaWrapper/ArethusaWrapper.js","components/ControlPanel/ControlPanel.js","components/ControlPanel/index.js","components/Treebank/index.js","components/Treebank/Treebank.js","components/Publication/Publication.js","components/Publication/index.js","components/NotFound/index.js","components/NotFound/NotFound.js","components/PublicationDirector/index.js","components/PublicationDirector/PublicationDirector.js","components/PublicationGroup/index.js","components/PublicationGroup/PublicationGroup.js","components/PublicationGroupDirector/index.js","components/PublicationGroupDirector/PublicationGroupDirector.js","components/Page/index.js","components/Page/Page.js","components/App/index.js","components/App/App.js","serviceWorker.js","index.js","components/ControlPanel/ControlPanel.module.css","components/Publication/Publication.module.css","components/Hero/Hero.module.css","components/Treebank/Treebank.module.css"],"names":["chunksType","shape","start","number","end","numbers","arrayOf","oneOfType","string","sectionType","locus","isRequired","path","xml","link","notes","chunks","publicationType","author","work","editors","sections","collectionType","title","element","publications","text","Header","logo","subtitle","copyright","report","github","twitter","collections","params","chunk","publication","children","undefined","props","href","defaultProps","Hero","className","styles","jumbotronSmall","renderSubtitle","transformLinkUri","uri","uriTransformer","process","Markdown","renderRow","key","scope","Array","isArray","map","e","renderEditors","s","section","getStart","renderSection","Collection","source","p","Home","config","c","collection","renderCollection","ArethusaConfig","main","debug","showKeys","chunkParam","auxConfPath","retrievers","TreebankRetriever","resource","docIdentifier","preselector","plugins","layouts","name","template","notifier","disable","navigator","chunkSize","navbar","resources","Gardener","route","lexInvFusekiEndpoint","morphologyServiceLat","newMorphologyServiceLat","morphologyServiceGrc","newMorphologyServiceGrc","morphologyServicePer","citeMapper","sgGrammar","depTree","contextMenu","contextMenuTemplate","morph","noRetrieval","relation","advancedMode","relations","keyCapture","regex","greek","α","ε","η","ι","ο","υ","ω","keys","ArethusaWrapper","elementId","remoteUrl","appConf","this","render","bind","doc","window","arethusaGoto","Arethusa","$","widget","remove","removeToastContainer","on","from","with","min","a","b","max","ControlPanel","state","isOpen","toggleOpen","lines","ii","push","match","index","Number","indexOf","length","getFbcnlFromNumbers","setState","getFbcnl","first","back","current","next","last","getLines","id","to","dropdownButton","type","aria-haspopup","aria-expanded","onClick","dropdownScroll","n","Component","Treebank","renderArethusa","arethusa","treebankContainer","publicationRow","t","renderText","Publication","markdown","publicationPath","publicationLink","renderLocusRow","renderLinkRow","treebankWrapper","target","rel","NotFound","PublicationDirector","argsLookup","forEach","args","PublicationGroup","PublicationGroupDirector","newConfig","Page","exact","component","App","basename","Boolean","location","hostname","ReactDOM","document","getElementById","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.15cc4217.chunk.js","sourcesContent":["import {\n  arrayOf, number, shape, string, oneOfType, element,\n} from 'prop-types';\n\nexport const chunksType = shape({\n  start: number,\n  end: number,\n  numbers: arrayOf(oneOfType([string])),\n});\n\nexport const sectionType = shape({\n  locus: string.isRequired,\n  path: string.isRequired,\n  xml: string.isRequired,\n  link: string,\n  notes: string,\n  chunks: chunksType.isRequired,\n});\n\nexport const publicationType = shape({\n  path: string.isRequired,\n  author: string.isRequired,\n  work: string.isRequired,\n  editors: oneOfType([string, arrayOf(string)]).isRequired,\n  sections: arrayOf(sectionType).isRequired,\n});\n\nexport const collectionType = shape({\n  title: oneOfType([string, element]).isRequired,\n  publications: arrayOf(publicationType),\n  text: string,\n});\n\nexport const configType = shape({\n  logo: string,\n  link: string,\n  title: oneOfType([string, element]).isRequired,\n  subtitle: string.isRequired,\n  copyright: string,\n  report: string,\n  github: string,\n  twitter: string,\n  collections: arrayOf(collectionType).isRequired,\n});\n\nexport const publicationMatchType = shape({\n  params: shape({\n    chunk: string.isRequired,\n  }).isRequired,\n});\n\nexport const publicationGroupMatchType = shape({\n  params: shape({\n    publication: string.isRequired,\n  }).isRequired,\n});\n","import React from 'react';\nimport { string, node } from 'prop-types';\nimport { PerseidsHeader } from 'perseids-react-components';\n\nconst Header = ({ logo, link, children }) => {\n  if (link !== undefined) {\n    return <PerseidsHeader logo={logo} props={{ href: link }}>{children}</PerseidsHeader>;\n  }\n\n  return <PerseidsHeader logo={logo}>{children}</PerseidsHeader>;\n};\n\nHeader.propTypes = {\n  logo: string,\n  link: string,\n  children: node.isRequired,\n};\n\nHeader.defaultProps = {\n  logo: undefined,\n  link: undefined,\n};\n\nexport default Header;\n","import Header from './Header';\n\nexport default Header;\n","import Hero from './Hero';\n\nexport default Hero;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport styles from './Hero.module.css';\n\nconst renderSubtitle = (subtitle) => (\n  <p>\n    <span>\n      {subtitle}\n    </span>\n  </p>\n);\n\nconst Hero = ({ title, subtitle }) => (\n  <div className={`jumbotron jumbotron-fluid bg-dark ${styles.jumbotronSmall}`}>\n    <div className=\"container text-light\">\n      <h1 className=\"display-4\">\n        {title}\n      </h1>\n      {subtitle && renderSubtitle(subtitle)}\n    </div>\n  </div>\n);\n\nHero.propTypes = {\n  title: PropTypes.string.isRequired,\n  subtitle: PropTypes.string.isRequired,\n};\n\nexport default Hero;\n","import React from 'react';\nimport ReactMarkdown, { uriTransformer } from 'react-markdown';\n\nconst transformLinkUri = (uri) => (\n  uriTransformer(uri[0] === '/' ? `${process.env.PUBLIC_URL}${uri}` : uri)\n);\n\nconst Markdown = (props) => (\n  <ReactMarkdown\n    {...props}\n    transformLinkUri={transformLinkUri}\n  />\n);\n\nexport default Markdown;\n","import Markdown from './Markdown';\n\nexport default Markdown;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { publicationType } from '../../lib/types';\n\nimport Markdown from '../Markdown';\n\nconst getStart = (chunks) => {\n  const { start, numbers } = chunks;\n\n  if (start) {\n    return start;\n  }\n\n  return numbers[0];\n};\n\nconst renderSection = (section) => {\n  const { locus, path, chunks } = section;\n  const start = getStart(chunks);\n\n  return (\n    <Fragment key={path}>\n      <a href={`${path}/${start}`}>\n        {locus}\n      </a>\n      <br />\n    </Fragment>\n  );\n};\n\nconst renderEditors = (editors) => {\n  if (Array.isArray(editors)) {\n    return (\n      <ul className=\"pl-1\">\n        {editors.map((e) => <li key={e}>{e}</li>)}\n      </ul>\n    );\n  }\n\n  return editors;\n};\n\nconst renderRow = (publication) => {\n  const {\n    path,\n    author,\n    work,\n    editors,\n    sections,\n  } = publication;\n\n  return (\n    <tr className=\"d-flex\" key={path}>\n      <th className=\"col-md-3 d-none d-md-block\" scope=\"row\">{author}</th>\n      <td className=\"col-md-4 d-none d-md-block\">{work}</td>\n      <td className=\"col-8 col-sm-7 d-block d-md-none\">\n        <strong>{author}</strong>\n        ,\n        {' '}\n        <em>{work}</em>\n      </td>\n      <td className=\"col-md-3 col-lg-3 d-none d-md-block\">\n        {renderEditors(editors)}\n      </td>\n      <td className=\"col-4 col-sm-5 col-md-2 col-lg-2 text-right\">\n        {sections.map((s) => renderSection(s))}\n      </td>\n    </tr>\n  );\n};\n\nconst Collection = ({ title, publications, text }) => (\n  <div className=\"container\">\n    <div className=\"row pb-3\">\n      <div className=\"col-12\">\n        {title && <h2>{title}</h2>}\n        {text && <Markdown source={text} />}\n        <table className=\"table\">\n          {publications && (\n            <>\n              <thead className=\"thead-light\">\n                <tr className=\"d-flex\">\n                  <th className=\"col-md-3 d-none d-md-block\" scope=\"col\">Author</th>\n                  <th className=\"col-8 col-sm-7 col-md-4\" scope=\"col\">Work</th>\n                  <th className=\"col-md-3 col-lg-3 d-none d-md-block\" scope=\"col\">Editors</th>\n                  <th className=\"col-4 col-sm-5 col-md-2 col-lg-2\" scope=\"col\">Locus</th>\n                </tr>\n              </thead>\n              <tbody>\n                {publications.map((p) => renderRow(p))}\n              </tbody>\n            </>\n          )}\n        </table>\n      </div>\n    </div>\n  </div>\n);\n\nCollection.propTypes = {\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.element]).isRequired,\n  publications: PropTypes.arrayOf(publicationType),\n  text: PropTypes.string,\n};\n\nCollection.defaultProps = {\n  publications: undefined,\n  text: undefined,\n};\n\nexport default Collection;\n","import Collection from './Collection';\n\nexport default Collection;\n","import Home from './Home';\n\nexport default Home;\n","import React from 'react';\n\nimport { configType } from '../../lib/types';\n\nimport Header from '../Header';\nimport Hero from '../Hero';\nimport Collection from '../Collection';\n\nconst renderCollection = (collection) => {\n  const { title, text, publications } = collection;\n\n  return (\n    <Collection\n      key={title}\n      title={title}\n      text={text}\n      publications={publications}\n    />\n  );\n};\n\nconst Home = ({ config }) => {\n  const {\n    logo,\n    link,\n    title,\n    subtitle,\n    collections,\n  } = config;\n\n  return (\n    <>\n      <Header logo={logo} link={link}>\n        {title}\n      </Header>\n      <Hero title={title} subtitle={subtitle} />\n      {collections.map((c) => renderCollection(c))}\n    </>\n  );\n};\n\nHome.propTypes = {\n  config: configType.isRequired,\n};\n\nexport default Home;\n","const ArethusaConfig = {\n  main: {\n    debug: false,\n    showKeys: false,\n    chunkParam: 'chunk',\n    auxConfPath: 'https://services.perseids.org/arethusa-configs',\n    retrievers: {\n      TreebankRetriever: {\n        resource: 'Gardener',\n        docIdentifier: 'treebank',\n        preselector: 'w',\n      },\n    },\n    plugins: [\n      'text',\n      'morph',\n      'relation',\n      'depTree',\n    ],\n    layouts: [\n      {\n        name: 'widget',\n        template: 'js/templates/widget.html',\n      },\n    ],\n  },\n  notifier: {\n    disable: true,\n  },\n  navigator: {\n    chunkSize: 1,\n  },\n  navbar: false,\n  resources: {\n    Gardener: {\n      route: `${process.env.PUBLIC_URL}/xml/:doc`,\n      params: [\n        'doc',\n      ],\n    },\n    lexInvFusekiEndpoint: {\n      route: 'http://fuseki.perseids.org/fuseki/ds/query?format=json',\n    },\n    morphologyServiceLat: {\n      route: 'http://services.perseids.org/bsp/morphologyservice/analysis/word?lang=lat&engine=morpheuslat',\n    },\n    newMorphologyServiceLat: {\n      route: 'http://morph.perseids.org/analysis/word?lang=lat&engine=morpheuslat',\n    },\n    morphologyServiceGrc: {\n      route: 'http://services.perseids.org/bsp/morphologyservice/analysis/word?lang=grc&engine=morpheusgrc',\n    },\n    newMorphologyServiceGrc: {\n      route: 'http://morph.perseids.org/analysis/word?lang=grc&engine=morpheusgrc',\n    },\n    morphologyServicePer: {\n      route: 'http://localhost/extapi/morphologyservice/analysis/word?lang=per&engine=hazm',\n    },\n    citeMapper: {\n      route: 'http://services.perseids.org/cite_mapper/find_cite',\n    },\n    sgGrammar: {\n      route: 'http://services.perseids.org/sg/:doc.html',\n    },\n  },\n  plugins: {\n    text: {\n      main: true,\n      template: 'js/templates/text_with_context.html',\n    },\n    depTree: {\n      main: true,\n      contextMenu: false,\n      contextMenuTemplate: 'js/arethusa.dep_tree/templates/context_menu.html',\n      template: 'js/templates/dep_tree.html',\n    },\n    morph: {\n      noRetrieval: 'online',\n      contextMenu: true,\n      contextMenuTemplate: 'js/arethusa.morph/templates/context_menu.html',\n    },\n    relation: {\n      advancedMode: true,\n      relations: {},\n    },\n  },\n  keyCapture: {\n    regex: {\n      greek: {\n        α: '[\\u03b1\\u1f01\\u1f05\\u1f03\\u1f07\\u1f00\\u1f04\\u1f02\\u1f06\\u03ac\\u1f70\\u1fb6\\u1f81\\u1f85\\u1f83\\u1f87\\u1f80\\u1f84\\u1f82\\u1f86\\u1fb4\\u1fb2\\u1fb7\\u1fb3]',\n        ε: '[\\u03b5\\u03ad\\u1f72\\u1f10\\u1f11\\u1f14\\u1f12\\u1f15\\u1f13]',\n        η: '[\\u03b7\\u1f21\\u1f25\\u1f23\\u1f27\\u1f20\\u1f24\\u1f22\\u1f26\\u03ae\\u1f74\\u1fc6\\u1f91\\u1f95\\u1f93\\u1f97\\u1f90\\u1f94\\u1f92\\u1f96\\u1fc4\\u1fc2\\u1fc7\\u1fc3]',\n        ι: '[\\u03b9\\u1f31\\u1f35\\u1f33\\u1f37\\u1f30\\u1f34\\u1f32\\u1f36\\u03af\\u1f76\\u1fd6]',\n        ο: '[\\u03bf\\u03cc\\u1f78\\u1f40\\u1f41\\u1f44\\u1f42\\u1f45\\u1f43]',\n        υ: '[\\u03c5\\u1f51\\u1f55\\u1f53\\u1f57\\u1f50\\u1f54\\u1f52\\u1f56\\u03cd\\u1f7a\\u1fe6]',\n        ω: '[\\u03c9\\u1f61\\u1f65\\u1f63\\u1f67\\u1f60\\u1f64\\u1f62\\u1f66\\u03ce\\u1f7c\\u1ff6\\u1fa1\\u1fa5\\u1fa3\\u1fa7\\u1fa0\\u1fa4\\u1fa2\\u1fa6\\u1ff4\\u1ff2\\u1ff7\\u1ff3]',\n      },\n    },\n    keys: {},\n  },\n};\n\nexport default ArethusaConfig;\n","import ArethusaWrapper from './ArethusaWrapper';\n\nexport default ArethusaWrapper;\n","import ArethusaConfig from './ArethusaConfig';\n\nimport './custom.css';\n\nconst removeToastContainer = ($) => {\n  $('#toast-container').remove();\n};\n\nclass ArethusaWrapper {\n  elementId = 'treebank_container';\n\n  remoteUrl = `${process.env.PUBLIC_URL}/arethusa/`;\n\n  appConf = ArethusaConfig;\n\n  constructor() {\n    this.render = this.render.bind(this);\n  }\n\n  render(doc, chunk) {\n    // eslint-disable-next-line no-undef\n    const { arethusaGoto, Arethusa, $ } = window;\n\n    if (this.widget) {\n      if (this.doc === doc && this.chunk !== chunk) {\n        arethusaGoto(chunk);\n        removeToastContainer($);\n      }\n    } else {\n      this.widget = new Arethusa();\n\n      this.widget\n        .on(this.elementId)\n        .from(this.remoteUrl)\n        .with(this.appConf)\n        .start({ doc, chunk });\n    }\n\n    this.doc = doc;\n    this.chunk = chunk;\n  }\n}\n\nexport default ArethusaWrapper;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { chunksType, publicationMatchType } from '../../lib/types';\n\nimport styles from './ControlPanel.module.css';\n\nconst min = (a, b) => (a < b ? a : b);\nconst max = (a, b) => (a > b ? a : b);\n\nconst getFbcnlFromNumbers = (chunk, numbers) => {\n  const index = numbers.indexOf(chunk);\n\n  return [\n    numbers[0],\n    numbers[max(0, index - 1)],\n    chunk,\n    numbers[min(numbers.length - 1, index + 1)],\n    numbers[numbers.length - 1],\n  ];\n};\n\nclass ControlPanel extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isOpen: false,\n    };\n\n    this.toggleOpen = this.toggleOpen.bind(this);\n  }\n\n  getLines() {\n    const { chunks: { start, end, numbers } } = this.props;\n\n    if (numbers) {\n      return numbers;\n    }\n\n    const lines = [];\n    for (let ii = start; ii <= end; ii += 1) {\n      lines.push(ii);\n    }\n\n    return lines;\n  }\n\n  getFbcnl() {\n    const { chunks: { start, end, numbers }, match } = this.props;\n    const { params: { chunk } } = match;\n    const index = Number(chunk);\n\n    if (numbers) {\n      return getFbcnlFromNumbers(chunk, numbers);\n    }\n\n    return [\n      start,\n      max(start, index - 1),\n      chunk,\n      min(end, index + 1),\n      end,\n    ];\n  }\n\n  toggleOpen() {\n    this.setState(({ isOpen }) => ({ isOpen: !isOpen }));\n  }\n\n  render() {\n    const { isOpen } = this.state;\n    const [first, back, current, next, last] = this.getFbcnl();\n    const lines = this.getLines();\n\n    return (\n      <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\n        <div className=\"collapse navbar-collapse justify-content-center\" id=\"navbarsExample10\">\n          <ul className=\"navbar-nav\">\n            <li className=\"nav-item\">\n              <Link className={`nav-link text-light ${styles.link}`} to={`./${first}`}>\n                &laquo; First\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link className={`nav-link text-light ${styles.link}`} to={`./${back}`}>\n                &#8249; Back\n              </Link>\n            </li>\n            <li className=\"nav-item dropdown\">\n              <button className={`btn btn-link nav-link text-light dropdown-toggle ${styles.dropdownButton}`} type=\"button\" aria-haspopup=\"true\" aria-expanded={isOpen} onClick={this.toggleOpen}>\n                {current}\n              </button>\n              <div className={`dropdown-menu ${styles.dropdownScroll} ${isOpen ? 'show' : ''}`}>\n                {\n                  lines.map((n) => (\n                    <Link className=\"dropdown-item\" key={n} to={`./${n}`} onClick={this.toggleOpen}>\n                      {n}\n                    </Link>\n                  ))\n                }\n              </div>\n            </li>\n            <li className=\"nav-item\">\n              <Link className={`nav-link text-light ${styles.link}`} to={`./${next}`}>\n                Next &#8250;\n              </Link>\n            </li>\n            <li>\n              <Link className={`nav-link text-light ${styles.link}`} to={`./${last}`}>\n                Last &raquo;\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </nav>\n    );\n  }\n}\n\nControlPanel.propTypes = {\n  chunks: chunksType.isRequired,\n  match: publicationMatchType.isRequired,\n};\n\nexport default ControlPanel;\n","import ControlPanel from './ControlPanel';\n\nexport default ControlPanel;\n","import Treebank from './Treebank';\n\nexport default Treebank;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { chunksType, publicationMatchType } from '../../lib/types';\n\nimport styles from './Treebank.module.css';\n\nimport ArethusaWrapper from '../ArethusaWrapper';\nimport ControlPanel from '../ControlPanel';\n\nclass Treebank extends Component {\n  componentDidMount() {\n    this.renderArethusa();\n  }\n\n  componentDidUpdate() {\n    this.renderArethusa();\n  }\n\n  renderArethusa() {\n    const { xml, match: { params: { chunk } }, arethusa: { render } } = this.props;\n\n    render(xml, chunk);\n  }\n\n  render() {\n    const { chunks, match } = this.props;\n\n    return (\n      <>\n        <ControlPanel match={match} chunks={chunks} />\n        <div className=\"__artsa\">\n          <div id=\"treebank_container\" className={styles.treebankContainer} />\n        </div>\n      </>\n    );\n  }\n}\n\nTreebank.propTypes = {\n  arethusa: PropTypes.instanceOf(ArethusaWrapper).isRequired,\n  chunks: chunksType.isRequired,\n  match: publicationMatchType.isRequired,\n  xml: PropTypes.string.isRequired,\n};\n\nexport default Treebank;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { chunksType, publicationMatchType } from '../../lib/types';\n\nimport styles from './Publication.module.css';\n\nimport Header from '../Header';\nimport ArethusaWrapper from '../ArethusaWrapper';\nimport Treebank from '../Treebank';\nimport Markdown from '../Markdown';\n\nconst renderText = (text) => {\n  if (Array.isArray(text)) {\n    return (\n      <div>\n        {text.map((t) => (\n          <span key={t}>\n            {t}\n            <br />\n          </span>\n        ))}\n      </div>\n    );\n  }\n\n  return text;\n};\n\nconst renderRow = (title, text) => (\n  <tr>\n    <th scope=\"col\">{title}</th>\n    <td className={styles.publicationRow}>\n      {renderText(text)}\n    </td>\n  </tr>\n);\n\nconst renderLinkRow = (title, link) => (\n  <tr>\n    <th scope=\"col\">{title}</th>\n    <td>\n      <a href={link}>{link}</a>\n    </td>\n  </tr>\n);\n\nconst renderMarkdownRow = (title, markdown) => (\n  <tr>\n    <th scope=\"col\">{title}</th>\n    <td className={styles.publicationRow}>\n      <Markdown source={markdown} />\n    </td>\n  </tr>\n);\n\nconst renderLocusRow = (title, text, publicationPath) => (\n  <tr>\n    <th scope=\"col\">{title}</th>\n    <td className={styles.publicationRow}>\n      {text}\n      {' '}\n      <a href={`../${publicationPath}`}>\n        (See all)\n      </a>\n    </td>\n  </tr>\n);\n\nclass Publication extends Component {\n  constructor(props) {\n    super(props);\n\n    this.arethusa = new ArethusaWrapper();\n  }\n\n  render() {\n    const {\n      logo,\n      link,\n      publicationPath,\n      author,\n      work,\n      editors,\n      locus,\n      publicationLink,\n      notes,\n      xml,\n      chunks,\n      match,\n    } = this.props;\n\n    return (\n      <>\n        <Header logo={logo} link={link}>\n          <span>\n            <i>{work}</i>\n          </span>\n          <ul className=\"navbar-nav ml-auto\">\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" href={`${process.env.PUBLIC_URL}/`}>\n                Home\n              </a>\n            </li>\n          </ul>\n        </Header>\n        <div className=\"container pt-3\">\n          <h2>\n            <span>\n              {author}\n              ,\n              <i>\n                {' '}\n                {work}\n                {' '}\n              </i>\n              {locus}\n            </span>\n          </h2>\n          <table className=\"table\">\n            <tbody>\n              {author && renderRow('Author', author)}\n              {work && renderRow('Work', work)}\n              {locus && renderLocusRow('Locus', locus, publicationPath)}\n              {editors && renderRow('Editors', editors)}\n              {publicationLink && renderLinkRow('Link', publicationLink)}\n              {notes && renderMarkdownRow('Notes', notes)}\n            </tbody>\n          </table>\n          <div className={styles.treebankWrapper}>\n            <Treebank xml={xml} chunks={chunks} match={match} arethusa={this.arethusa} />\n          </div>\n          <div className=\"pt-1 pb-4 text-right\">\n            <a href={`${process.env.PUBLIC_URL}/xml/${xml}`} target=\"_blank\" rel=\"noopener noreferrer\">\n              View XML\n            </a>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nPublication.propTypes = {\n  logo: PropTypes.string,\n  link: PropTypes.string,\n  publicationPath: PropTypes.string.isRequired,\n  author: PropTypes.string.isRequired,\n  work: PropTypes.string.isRequired,\n  editors: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]).isRequired,\n  locus: PropTypes.string.isRequired,\n  publicationLink: PropTypes.string,\n  notes: PropTypes.string,\n  xml: PropTypes.string.isRequired,\n  chunks: chunksType.isRequired,\n  match: publicationMatchType.isRequired,\n};\n\nPublication.defaultProps = {\n  logo: undefined,\n  link: undefined,\n  publicationLink: undefined,\n  notes: undefined,\n};\n\nexport default Publication;\n","import Publication from './Publication';\n\nexport default Publication;\n","import NotFound from './NotFound';\n\nexport default NotFound;\n","import React from 'react';\n\nimport { configType } from '../../lib/types';\n\nimport Header from '../Header';\n\nconst NotFound = ({ config: { logo, link } }) => (\n  <>\n    <Header logo={logo} link={link}>\n      <span>\n        Not Found\n      </span>\n      <ul className=\"navbar-nav ml-auto\">\n        <li className=\"nav-item\">\n          <a className=\"nav-link\" href={`${process.env.PUBLIC_URL}/`}>\n            Home\n          </a>\n        </li>\n      </ul>\n    </Header>\n    <div className=\"container pt-5\">\n      <div className=\"row col-12 pt-5 pb-3\">\n        <div className=\"col-12 text-center\">\n          <h1>Error 404</h1>\n        </div>\n      </div>\n      <div className=\"row col-12 pb-3\">\n        <div className=\"col-12 text-center\">\n          <h2>Publication not found</h2>\n        </div>\n      </div>\n      <div className=\"row col-12 pb-3\">\n        <div className=\"col-12 text-center\">\n          <h2>\n            <a href={`${process.env.PUBLIC_URL}/`}>\n              Return to homepage\n            </a>\n          </h2>\n        </div>\n      </div>\n    </div>\n  </>\n);\n\nNotFound.propTypes = {\n  config: configType.isRequired,\n};\n\nexport default NotFound;\n","import PublicationDirector from './PublicationDirector';\n\nexport default PublicationDirector;\n","import React, { Component } from 'react';\nimport { configType, publicationMatchType } from '../../lib/types';\n\nimport Publication from '../Publication';\nimport NotFound from '../NotFound';\n\nclass PublicationDirector extends Component {\n  constructor(props) {\n    super(props);\n\n    const { config } = props;\n    const argsLookup = {};\n    const { logo, link } = config;\n\n    config.collections.forEach((collection) => {\n      (collection.publications || []).forEach((publication) => {\n        const {\n          author, work, editors, path: publicationPath,\n        } = publication;\n\n        publication.sections.forEach((section) => {\n          const {\n            path,\n            locus,\n            link: publicationLink,\n            notes,\n            xml,\n            chunks,\n          } = section;\n\n          argsLookup[path] = {\n            logo,\n            link,\n            publicationPath,\n            author,\n            work,\n            editors,\n            locus,\n            publicationLink,\n            notes,\n            xml,\n            chunks,\n          };\n        });\n      });\n    });\n\n    this.argsLookup = argsLookup;\n  }\n\n  render() {\n    const { config, match } = this.props;\n    const { publication } = match.params;\n    const args = this.argsLookup[publication];\n\n    if (args === undefined) {\n      return <NotFound config={config} />;\n    }\n\n    return <Publication {...args} match={match} />;\n  }\n}\n\nPublicationDirector.propTypes = {\n  config: configType.isRequired,\n  match: publicationMatchType.isRequired,\n};\n\nexport default PublicationDirector;\n","import PublicationGroup from './PublicationGroup';\n\nexport default PublicationGroup;\n","import React from 'react';\n\nimport { configType } from '../../lib/types';\n\nimport Header from '../Header';\nimport Hero from '../Hero';\nimport Collection from '../Collection';\n\nconst renderCollection = (collection) => {\n  const { title, publications } = collection;\n\n  return (\n    <Collection\n      key={title}\n      title={title}\n      publications={publications}\n    />\n  );\n};\n\nconst PublicationGroup = ({\n  config: {\n    logo,\n    link,\n    title,\n    subtitle,\n    collections,\n  },\n}) => (\n  <>\n    <Header logo={logo} link={link}>\n      {title}\n      <ul className=\"navbar-nav ml-auto\">\n        <li className=\"nav-item\">\n          <a className=\"nav-link\" href={`${process.env.PUBLIC_URL}/`}>\n            Home\n          </a>\n        </li>\n      </ul>\n    </Header>\n    <Hero title={title} subtitle={subtitle} />\n    {collections.map((c) => renderCollection(c))}\n  </>\n);\n\nPublicationGroup.propTypes = {\n  config: configType.isRequired,\n};\n\nexport default PublicationGroup;\n","import PublicationGroupDirector from './PublicationGroupDirector';\n\nexport default PublicationGroupDirector;\n","import React, { Component } from 'react';\n\nimport { configType, publicationGroupMatchType } from '../../lib/types';\n\nimport PublicationGroup from '../PublicationGroup';\nimport NotFound from '../NotFound';\n\nclass PublicationGroupDirector extends Component {\n  constructor(props) {\n    super(props);\n\n    const { config } = props;\n    const argsLookup = {};\n    const {\n      logo,\n      link,\n      title,\n      subtitle,\n      report,\n      github,\n      twitter,\n      collections,\n    } = config;\n\n    collections.forEach((collection) => {\n      (collection.publications || []).forEach((publication) => {\n        const { path, author, work } = publication;\n\n        argsLookup[path] = {\n          logo,\n          link,\n          title,\n          subtitle,\n          report,\n          github,\n          twitter,\n          collections: [\n            {\n              title: (\n                <>\n                  {author}\n                  ,\n                  {' '}\n                  <i>{work}</i>\n                </>\n              ),\n              publications: [publication],\n            },\n          ],\n        };\n      });\n    });\n\n    this.argsLookup = argsLookup;\n  }\n\n  render() {\n    const { config, match } = this.props;\n    const { publication } = match.params;\n    const newConfig = this.argsLookup[publication];\n\n    if (newConfig === undefined) {\n      return <NotFound config={config} />;\n    }\n\n    return <PublicationGroup config={newConfig} />;\n  }\n}\n\nPublicationGroupDirector.propTypes = {\n  config: configType.isRequired,\n  match: publicationGroupMatchType.isRequired,\n};\n\nexport default PublicationGroupDirector;\n","import Page from './Page';\n\nexport default Page;\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { PerseidsFooter } from 'perseids-react-components';\n\nimport { configType } from '../../lib/types';\n\nimport Home from '../Home';\nimport PublicationDirector from '../PublicationDirector';\nimport PublicationGroupDirector from '../PublicationGroupDirector';\n\nconst Page = ({\n  config,\n  config: {\n    copyright,\n    report,\n    github,\n    twitter,\n  },\n}) => (\n  <>\n    <Switch>\n      <Route exact path=\"/\" component={() => <Home config={config} />} />\n      <Route exact path=\"/:publication/\" render={(props) => <PublicationGroupDirector {...props} config={config} />} />\n      <Route exact path=\"/:publication/:chunk\" render={(props) => <PublicationDirector {...props} config={config} />} />\n    </Switch>\n    <PerseidsFooter\n      copyright={copyright}\n      report={report}\n      github={github}\n      twitter={twitter}\n    />\n  </>\n);\n\nPage.propTypes = {\n  config: configType.isRequired,\n};\n\nexport default Page;\n","import App from './App';\n\nexport default App;\n","import React from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport config from '../../config.json';\n\nimport Page from '../Page';\n\nconst App = () => (\n  <Router basename={process.env.PUBLIC_URL}>\n    <Page config={config} />\n  </Router>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'perseids-react-components/build/css/index.css';\n\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dropdownButton\":\"ControlPanel_dropdownButton__1o6TV\",\"dropdownScroll\":\"ControlPanel_dropdownScroll__17rgQ\",\"link\":\"ControlPanel_link__OEqVs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"publicationRow\":\"Publication_publicationRow__3taiJ\",\"treebankWrapper\":\"Publication_treebankWrapper__2KYz-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"jumbotronSmall\":\"Hero_jumbotronSmall__IN8kP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"treebankContainer\":\"Treebank_treebankContainer__sQn_K\"};"],"sourceRoot":""}